{
    "id": "marco-juliani-portfolio", 
    "type": "root",
    "props":{
        "thumbnail": "data/images/mj-logo.png"
    },
    "children": [
        {
            "id": "proceduralmassing",
            "type": "project",
            "props": {
                "name": "Procedural Massing",
                "tags": [
                    "c#",
                    "hypar"
                ],
                "content": "Have a play over at Hypar: https://hypar.io/workflows/0c29a4f5-4e8e-4f55-8101-14eafb8a2c8e.",
                "thumbnail": "data/thumbnails/proceduralmassing-thumbnail.png"
            },
            "children": [
                {
                    "src": "data/images/proceduralmassing-01.jpeg",
                    "type": "image",
                    "props": {},
                    "children": []
                }
            ]
        },
        {
            "id": "springplan",
            "type": "project",
            "props": {
                "name": "Spring Plan",
                "tags": [
                    "c#",
                    "bartlett",
                    "gh3d"
                ],
                "content": "Have a play over at Hypar: https://hypar.io/workflows/0c29a4f5-4e8e-4f55-8101-14eafb8a2c8e.",
                "thumbnail": "data/thumbnails/springplan-thumbnail.jpeg"
            },
            "children": [
                {
                    "src": "data/images/springplan-01.gif",
                    "type": "image",
                    "props": {},
                    "children": []
                }
            ]
        },
        {
            "id": "treeviewer",
            "type": "project",
            "props": {
                "name": "Tree Viewer",
                "tags": [
                    "js",
                    "css"
                ],
                "content": "Find the deployed viewer here. While working with tree data structures (rendering and patching them), I was compelled to build an interactive tree viewer/explorer where one could zoom into different levels of the tree selectively. This is very much work in progress and looking to make it more performance to handle larger trees.",
                "thumbnail": "data/thumbnails/treeviewer-thumbnail.png"
            },
            "children": [
                {
                    "src": "data/images/treeviewer-image.png",
                    "type": "image",
                    "props": {},
                    "children": []
                }
            ]
        },
        {
            "id": "scaffoldcity",
            "type": "project",
            "props": {
                "name": "Scaffold City",
                "tags": [
                    "bartlett",
                    "c#",
                    "unity"
                ],
                "content": "Presentation",
                "thumbnail": "data/thumbnails/scaffoldcity-thumbnail.png"
            },
            "children": [
                {
                    "id": "scaffoldcity-presentation",
                    "type": "pdf",
                    "props": {
                        "content": "Presentation"
                    },
                    "children": []
                },
                {
                    "src": "scaffoldcity-01.gif",
                    "type": "image",
                    "props": {
                        "src": "data/images/scaffoldcity-01.gif"
                    },
                    "children": []
                },
                {
                    "id": "scaffoldcity-02.gif",
                    "type": "image",
                    "props": {
                        "src": "data/images/scaffoldcity-02.gif"
                    },
                    "children": []
                }
            ]
        },
        {
            "id": "skyline",
            "type": "project",
            "props": {
                "name": "Skyline Generator",
                "tags": [
                    "js",
                    "css"
                ],
                "content": "Find the deployed viewer here.",
                "thumbnail": "data/thumbnails/skyline-thumbnail.png"
            },
            "children": [
                {
                    "id": "skyline-image",
                    "type": "image",
                    "props": {
                        "src": "data/images/skyline-image.png"
                    },
                    "children": []
                }
            ]
        },
        {
            "id": "autocheckers",
            "type": "project",
            "props": {
                "name": "Autonomouse Checkers",
                "tags": [
                    "c#",
                    "unity",
                    "bartlett"
                ],
                "content": "Presentation.",
                "thumbnail": "data/thumbnails/autocheckers.png"
            }
        },
        {
            "id": "erosion",
            "type": "project",
            "props": {
                "name": "Erosion Game",
                "tags": [
                    "unity",
                    "c#",
                    "bartlett"
                ],
                "content": "Presentation.",
                "thumbnail": "data/thumbnails/erosion-thumbnail.jpeg"
            }
        },
        {
            "id": "hfz",
            "type": "project",
            "props": {
                "name": "HFZ",
                "tags": [
                    "gh3d",
                    "wb",
                    "flux"
                ],
                "content": "Presentation.",
                "thumbnail": "data/thumbnails/hfz-thumbnail.png"
            }
        },
        {
            "id": "gridlocked",
            "type": "project",
            "props": {
                "name": "Grid-locked",
                "tags": [
                    "unity",
                    "c#",
                    "ios"
                ],
                "content": "Download from AppStore here if you're on iPhone or iPad. Set out to build a simple 2.5D game for iOS. During the covid lockdowns, I decided it would be fun to learn the pipeline to take a built game from Unity, through to publishing it in the AppStore. I had fun implementing the simply dynamics I had in mind, including the animations, the level progression, and even got around to implementing basic ads. The initial implementation was choking in terms of performance, so I ended up buying Game Programming Patterns, where I picked up a few design patterns to keep performance in check.",
                "thumbnail": "data/thumbnails/gridlocked-thumb.png"
            },
            "children": [
                {
                    "id": "gridlocked-01",
                    "type": "image",
                    "props": {
                        "src": "data/images/gridlocked-01.png"
                    },
                    "children": []
                },
                {
                    "id": "gridlocked-02",
                    "type": "image",
                    "props": {
                        "src": "data/images/gridlocked-02.png"
                    },
                    "children": []
                },
                {
                    "id": "gridlocked-03",
                    "type": "image",
                    "props": {
                        "src": "data/images/gridlocked-03.png"
                    },
                    "children": []
                }
            ]
        },
        {
            "id": "abstractimagelearning",
            "type": "project",
            "props": {
                "name": "Abstract Image Learning",
                "tags": [
                    "python",
                    "pix2pix",
                    "pytorch"
                ],
                "content": "Download from AppStore here if you're on iPhone or iPad. Set out to build a simple 2.5D game for iOS. During the covid lockdowns, I decided it would be fun to learn the pipeline to take a built game from Unity, through to publishing it in the AppStore. I had fun implementing the simply dynamics I had in mind, including the animations, the level progression, and even got around to implementing basic ads. The initial implementation was choking in terms of performance, so I ended up buying Game Programming Patterns, where I picked up a few design patterns to keep performance in check.",
                "thumbnail": "data/thumbnails/cganexperiments.jpeg"
            },
            "children": [
                {
                    "id": "abstractlearning-01",
                    "type": "image",
                    "props": {
                        "src": "data/images/abstractlearning-01.gif"
                    },
                    "children": []
                },
                {
                    "id": "abstractlearning-02",
                    "type": "image",
                    "props": {
                        "src": "data/images/abstractlearning-02.gif"
                    },
                    "children": []
                },
                {
                    "id": "abstractlearning-03",
                    "type": "image",
                    "props": {
                        "src": "data/images/abstractlearning-03.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "abstractlearning-04",
                    "type": "image",
                    "props": {
                        "src": "data/images/abstractlearning-04.jpeg"
                    },
                    "children": []
                }
            ]
        },
        {
            "id": "downunder",
            "type": "project",
            "props": {
                "name": "Office Down Under",
                "tags": [
                    "gh3d",
                    "wb"
                ],
                "content": "Download from AppStore here if you're on iPhone or iPad. Set out to build a simple 2.5D game for iOS. During the covid lockdowns, I decided it would be fun to learn the pipeline to take a built game from Unity, through to publishing it in the AppStore. I had fun implementing the simply dynamics I had in mind, including the animations, the level progression, and even got around to implementing basic ads. The initial implementation was choking in terms of performance, so I ended up buying Game Programming Patterns, where I picked up a few design patterns to keep performance in check.",
                "thumbnail": "data/thumbnails/downunder.jpeg"
            },
            "children": [
                {
                    "id": "downunder-01",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-01.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "downunder-02",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-02.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "downunder-03",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-03.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "downunder-04",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-04.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "downunder-05",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-05.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "downunder-06",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-06.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "downunder-07",
                    "type": "image",
                    "props": {
                        "src": "data/images/downunder-07.gif"
                    },
                    "children": []
                }
            ]
        },
        {
            "id": "tower",
            "type": "project",
            "props": {
                "name": "Tower a la carte",
                "tags": [
                    "gh3d",
                    "wb"
                ],
                "content": "Download from AppStore here if you're on iPhone or iPad. Set out to build a simple 2.5D game for iOS. During the covid lockdowns, I decided it would be fun to learn the pipeline to take a built game from Unity, through to publishing it in the AppStore. I had fun implementing the simply dynamics I had in mind, including the animations, the level progression, and even got around to implementing basic ads. The initial implementation was choking in terms of performance, so I ended up buying Game Programming Patterns, where I picked up a few design patterns to keep performance in check.",
                "thumbnail": "data/thumbnails/tower-thumb.jpeg"
            },
            "children": [
                {
                    "id": "tower-01",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-01.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-02",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-02.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-03",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-03.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-04",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-04.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-05",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-05.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-06",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-06.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-07",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-07.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-08",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-08.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-09",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-09.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-11",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-11.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-12",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-12.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-13",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-13.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-14",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-14.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-16",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-16.jpeg"
                    },
                    "children": []
                },
                {
                    "id": "tower-17",
                    "type": "image",
                    "props": {
                        "src": "data/images/tower-17.jpeg"
                    },
                    "children": []
                }

            ]
        }

    ]
}